<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[cocos2dx性能优化]]></title>
    <url>%2F2018%2F12%2F03%2Fcocos2dx%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>cocos2dx</category>
      </categories>
      <tags>
        <tag>cocos2dx</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[golang服务器开发]]></title>
    <url>%2F2018%2F11%2F30%2Fgolang%2F</url>
    <content type="text"><![CDATA[golang开发笔记涉及内容包括web服务器、游戏服务器的开始使用,包括一些开元的golang软件的解读. leaf goworld 等教程. 同时会有一些游戏demo展示. 跳转链接： golang深度解析 leaf解析 goworld解析 https://gameloses.github.io/golang/]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>golang</tag>
        <tag>go</tag>
        <tag>游戏服务器</tag>
        <tag>leaf</tag>
        <tag>goworld</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[gitbook使用]]></title>
    <url>%2F2018%2F11%2F28%2Fgitbook%2F</url>
    <content type="text"><![CDATA[Gitbook的搭建 gitbook是一个npm工具使用的是git和markdown技术支持构建多种格式的ebook. 安装npm install gitbook-cli gitbook -V 初始化创建一个空目录,生成README.md SUMMARY.md两个文件,使用如下命令 gitbook init README.md —— 书籍的介绍写在这个文件里 SUMMARY.md —— 书籍的目录结构在这里配置 编辑电子书目录编辑 * [第一章](section1/README.md) * [第一节](section1/example1.md) * [第二节](section1/example2.md) * [第二章](section2/README.md) * [第一节](section2/example1.md) 目录支持三级，目录中可以带链接.名录名+链接的方式.链接即相对md文件名字. 本地预览gitbook serve 发布电子书gitbook build 在本地目录生成_book静态网页电子书 生成电子书安装插件calibre. https://calibre-ebook.com/download 添加环境变量： cd ~ vim .bash_profile PATH = /Applications/calibre.app/Contents/MacOS:${PATH}&quot; source .bash_profile 生成电子书命令如下： gitbook pdf gitbook mobi 部署到github利用gh-pages将gitbook生成的静态网页发布到github pages上. 安装gh-pages npm install g gh-pages 在github上创建仓库例如cocos2dx 将书籍源码push到仓库的master分支 将_book发布到github仓库的gh-pages分支 gitbook build gh-pages -d _book]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>Gitbook</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[github上搭建hexo博客]]></title>
    <url>%2F2018%2F11%2F23%2Fhexo%E6%90%AD%E5%BB%BAgithubblog%2F</url>
    <content type="text"><![CDATA[打算在github上搭建起hexo博客和gitbook,主要记录一些技术积累.涉及游戏开前后端区块链等.解读一些开源的库.像skynet,pomelo,kbengine,coco2dx,cocos creator,ETH,goworld等.本文记录一下搭建hexo的过程纯属经验之谈. 基本流程 安装前提 node.js mac下注意npm对user/local的权限问题 git 保证使用ssh和github进行认证测试通过：ssh -T git@github.com. 创建github仓库 例如github用户名为gameloses则仓库名为:gameloses.github.io 安装hexonpm install -g hexo-cli hexo init blog cd blog npm install 基本配置在 _config.yml 中修改大部份的配置 配置部署参数 deploy: type: git repository: git@github.com:gameloses/gameloses.github.io.git branch: master 安装部署插件 cd blog npm install hexo-deployer-git --save 安装首页文章显示插件 npm install --save hexo-auto-excerpt 设置显示字数： auto_excerpt: enable: true length: 300 手动添加文章描述 npm install --save hexo-front-matter-excerpt 在文章标题描述中添加：excerpt: xxxxxxxx 或者文章中添加 ““ 文章资源文件夹 post_asset_folder: true {% asset_img example.jpg This is an example image %} 发布上传博客hexo d -g 常见的其他命令 hexo s == hexo server //启动本地服务 hexo g == hexo generate //生成 hexo d == hexo deploy //发布 hexo n == hexo new //新建 书写文章hexo new post &quot;文章名字&quot;使用模板生成文章 title: cocos2dx引擎架构概述 comments: true date: 2018-11-23 20:51:11 tags: categories: 分类标签为了使分类标签生效需要生成两个page文件 hexo new page categories hexo new page tags 主题配置一个模仿github样式的主题 git clone git@github.com:sabrinaluo/hexo-theme-replica.git themes/replica Set theme: replica in _config.yml (the one in your root folder) 安装插件安装rssnpm install hero-generator-feed配置如下： plugin: - hexo-generator-feed feed: type: atom path: atom.xml limit: 20 rss: /atom.xml 绑定域名添加WWW和@主机记录，记录类型为CNAME. 在source目录下创建CNAME文件，文件内容为域名例如：chuangyutime.com QA mac下node安装好之后使用npm安装全局包会出现usr/local目录权限读写问题？sudo chown -R $USER /usr/local修改权限之后使用ls -l /usr/local 查看权限 分类标签404？需要创建两个page categories、tags vscode 编写markdown回退文本之后以后存在特殊的bs字符问题？显示隐藏字符 &quot;editor.renderControlCharacters&quot;: true安装插件：Remove backspace control character开启设置：&quot;editor.formatOnType&quot;: true 在被设定的情况下，进行变换时;输入时启动]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
